"use strict";class MarkCodeLineManager{constructor(){this.lineElement=null;this.className="hll";}
setElement(){if(this.lineElement){this.unsetElement();}
let hash=window.location.hash;if(hash===""){return;}
this.lineElement=document.querySelector(hash);if(!this.lineElement){return;}
gmcAddClassToElement(this.className,this.lineElement,hash);this.showHiddenMarkedLine();}
unsetElement(){if(!this.lineElement){return;}
this.lineElement.classList.remove(this.className);this.lineElement=null;}
showHiddenMarkedLine(){let tabbedBlock=this.lineElement.closest(".tabbed-block");if(!tabbedBlock||window.getComputedStyle(tabbedBlock).display!=="none"){return;}
let tabbedContent=tabbedBlock.parentElement;let childBlocks=tabbedContent.children;let blockIndex;for(blockIndex=0;blockIndex<childBlocks.length;blockIndex++){if(childBlocks[blockIndex]===tabbedBlock){break;}}
let blockInputElement=tabbedContent.parentElement.children[blockIndex];blockInputElement.click();}}
let gGMC_DEBUG=window.location.hostname==="127.0.0.1";let gMarkCodeLineManager=new MarkCodeLineManager();window.addEventListener("DOMContentLoaded",_=>{gMarkCodeLineManager.setElement();gmcExpandNavigation();gmcExternalLinks();});window.addEventListener("hashchange",_=>{gMarkCodeLineManager.setElement();})
function gmcAddClassToElement(className,element,elementName){if(element.classList.contains(className)){return;}
element.classList.add(className);}
function gmcExternalLinks(){const hostname=window.location.hostname;const domainParts=hostname.split('.');const githubId=domainParts[1]==="github"?domainParts[0]:"auronen";const repoUrl=`github.com/${githubId}`;const regex=new RegExp(`^(?:https?:\/\/)?(${hostname}|${repoUrl})`);const anchors=document.querySelectorAll(".md-content a");const className="external-link";anchors.forEach(a=>{if(a.href===""||regex.test(a.href)){return;}
a.setAttribute("target","_blank");gmcAddClassToElement(className,a,a.href);});}
function gmcExpandNavigation(){if(window.matchMedia("(max-width: 76.1875em)").matches){return;}
const activeNav=document.querySelector(".md-nav__link--active");if(activeNav===null){return;}
const children=activeNav.parentElement.querySelector("nav > ul").children;for(let i=0;i<children.length;i++){const toggle=children[i].querySelector('input[type="checkbox"]');if(!toggle){continue;}
if(toggle.checked){continue;}
toggle.checked=true;}}
function gmcDebug(message){if(gGMC_DEBUG)
console.debug(message);}